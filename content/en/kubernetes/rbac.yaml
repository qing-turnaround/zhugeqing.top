apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: role-test
rules:
  - apiGroups: [""] # API 组
    resources: ["pods"] # 资源类型
    verbs: ["get", "watch", "list"] # 能够对资源进行的操作
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" 被忽略，因为 ClusterRoles 不受名字空间限制
  name: secret-reader
rules:
  - apiGroups: [""]
    # 在 HTTP 层面，用来访问 Secret 资源的名称为 "secrets"
    resources: ["secrets"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
# 此角色绑定允许 "jane" 读取 "default" 名字空间中的 Pod
# 你需要在该命名空间中有一个名为 “pod-reader” 的 Role
kind: RoleBinding
metadata:
  name: rolebinding-test
  namespace: default
subjects:
  # 你可以指定不止一个“subject（主体）”
  - kind: User
    name: zhugeqing # "name" 是区分大小写的
    apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" 指定与某 Role 或 ClusterRole 的绑定关系
  kind: Role # 此字段必须是 Role 或 ClusterRole
  name: role-test # 此字段必须与你要绑定的 Role的名称匹配
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
# 此集群角色绑定允许 “manager” 组中的任何人访问任何名字空间中的 Secret 资源
kind: ClusterRoleBinding
metadata:
  name: read-secrets-global
subjects:
  - kind: Group
    name: manager #  ClusterRoleBinding 允许 "manager" 组内的所有用户访问任何名字空间中的
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io
