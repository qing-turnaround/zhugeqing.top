<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>第一章：入门简介 on 请跟我一起踏上编程之旅</title>
    <link>https://2110833194.github.io/golang/article/</link>
    <description>Recent content in 第一章：入门简介 on 请跟我一起踏上编程之旅</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, “不可能”这三个字，你说的太多了！</copyright>
    <lastBuildDate>Fri, 16 Apr 2021 14:08:48 +0000</lastBuildDate>
    <sy:updatePeriod>weekly&#39;</sy:updatePeriod>
    
        <atom:link href="https://2110833194.github.io/golang/article/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>第1节：知名编程语言或系统的发展简史</title>
        <link>https://2110833194.github.io/golang/article/goinitial/1/</link>
        <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
        
        <atom:modified>Sun, 13 Dec 2020 00:00:00 +0000</atom:modified>
        <guid>https://2110833194.github.io/golang/article/goinitial/1/</guid>
        <description>一、B语言 B语言之父：Ken Thompson（肯.汤普森）。B语言是贝尔实验室开发的一种通用的程序设计语言，它是于1969年前后Ken Tho</description>
        <content:encoded>&lt;h1 id=&#34;一b语言&#34;&gt;一、B语言&lt;/h1&gt;
&lt;p&gt;B语言之父：Ken Thompson（肯.汤普森）。B语言是贝尔实验室开发的一种通用的程序设计语言，它是于1969年前后Ken Thompson（肯.汤普森）在Dennis Ritchie丹尼斯.里奇（Dennis Ritchie）的支持下设计出来。该语言得名于汤姆森的妻子Bonnie，它是一门开发于60年代中期的语言，现在使用者已经很少了。&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/KenThompson-300x198.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;二c语言&#34;&gt;二、C语言&lt;/h1&gt;
&lt;p&gt;C语言之父：Dennis Ritchie（丹尼斯·里奇）。美国著名计算机专家、C语言发明人、UNIX之父。在1969-1973年期间发明了C语言和Unix操作系统。&lt;/p&gt;
&lt;p&gt;到了70年代，诞生了一门非常重要的语言，这就是今天的大名鼎鼎的C语言。而C语言之父是美国著名的计算机专家。丹尼斯.利奇。 在开发C语言的时候其实是以B语言为基础。之所以发明C语言，实际上是因为这两个人，刚刚的B语言之父肯.汤普森和丹尼斯.里奇，一块写了一个操作系统，就是Unix系统。在写Unix系统的过程中，需要一种便利的语言，而B语言又达不到这个要求，所以丹尼斯.里奇就在B语言上进行改造，发明了C语言。目前 C语言是世界上最常用的程序语言之一。自从被C语言取代之后，B语言几乎已遭弃置。&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/dannis.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;三unix系统&#34;&gt;三、Unix系统&lt;/h1&gt;
&lt;p&gt;Unix之父：Dennis Ritchie（丹尼斯·里奇）及Ken Thompson（肯.汤普森）&lt;/p&gt;
&lt;p&gt;提到C语言就不得不说一下Unix系统。而Unix之父，自然就是这两个人，左侧这个是B语言之父肯汤普森。右侧这个是C语言之父丹尼斯.里奇。有意思的是，肯.汤普森当年开发 Unix的初衷是运行他编写的一款计算机游戏 Space Travel，这款游戏模拟太阳系天体运动，由玩家驾驶飞船，观赏景色并尝试在各种行星和月亮上登录。他先后在多个系统上试验，但运行效果不甚理想，于是决定自己开发操作系统，就这样，Unix 诞生了。英文中的前缀 Uni 是小的意思，小而且巧。这是 Unix 的设计初衷，这个理念也一直影响至今。 因为他们俩在1973年左右的时候发明了Unix操作系统，也因此获得了1983年的图灵大奖。这个奖项就相当于IT行业的诺贝尔奖。&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/WX20190322-173439.png&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;四c语言&#34;&gt;四、C++语言&lt;/h1&gt;
&lt;p&gt;C++之父：Bjarne Stroustrup（本贾尼·斯特劳斯特卢普）。1982年，美国贝尔实验室的Bjarne Stroustrup博士在C语言的基础上引入并扩充了面向对象的概念，发明了—种新的程序语言。为了表达该语言与c语言的渊源关系，它被命名为C++。&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/BjarneStroustrup-300x191.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;五python语言&#34;&gt;五、Python语言&lt;/h1&gt;
&lt;p&gt;Python之父：Guido van Rossum（吉多.范.罗苏姆）。1989年，为了打发圣诞节假期，Guido开始写Python语言的编译/解释器。1994年发布1.0版本。2019年10月发布了Python3.5版。&lt;/p&gt;
&lt;p&gt;python语言的理念就是：人生苦短，我用python。吉多推崇的是简洁，大方，美观，精致。吉多一直认为python是一门很优秀的语言，实际上python也确实是可以做各个行业，无论是web开发，还是服务器端维护，还有爬虫等等，但是在每个方向上都没有做到最精，所以在某些地方没有得到很大的体现。但是吉多一直认为酒香不怕巷子深，所以也没有大力的宣传。但是近几年随着人工智能也被大众所熟知。&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/GuidovanRossum-218x300.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;六java语言&#34;&gt;六、Java语言&lt;/h1&gt;
&lt;p&gt;Java之父是James Gosling（詹姆斯.高斯林）。1991年开发Oak，1994年更名为Java。1995年5月正式发布。&lt;/p&gt;
&lt;p&gt;实际上python比java的产生还要更早一点。java的出现，正是互联网大力兴起的时候，而java因为语言的特性，在互联网上有很大的优势，发布最初就异常火爆，掩盖住了python的势头。java最初的模型是在1991年的时候开发出，他的创始人詹姆斯高斯林。那个时候还叫做Oak橡树，后来詹姆斯希望使用java语言可以像喝咖啡一样轻松，愉悦。改名为java。&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/JamesGosling.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;七javascript语言&#34;&gt;七、JavaScript语言&lt;/h1&gt;
&lt;p&gt;Javascript之父是Brendan Eich（布兰登.艾奇)。JavaScript，是一门运行在浏览器端的脚本语言。这门语言是由网景公司在1995年发布的。当时网景公司主要是做浏览器方面，他们想把java语言应用在浏览器端，能够实现一些比如用户登录并验证的工作。招聘了一个新员工，叫做布兰登.艾奇，布兰登对java没有兴趣，为了应付公司的任务，只用了10天时间就设计出了JavaScript这门语言。但是JavaScript发展至今，随着前端开发异常的火爆，它已经是浏览器端的龙头语言了。&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/BrendanEich-300x260.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;八golang&#34;&gt;八、Golang&lt;/h1&gt;
&lt;p&gt;Go的三个作者分别是： Rob Pike（罗伯.派克），Ken Thompson（肯.汤普森）和Robert Griesemer（罗伯特.格利茨默）&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/aa.jpg&#34;/&gt; 
&lt;/figure&gt;

</content:encoded>
        <dc:creator>诸葛青的编程之旅</dc:creator>
        <media:content url="https://2110833194.github.ioimages/recommend_site/xingyouji.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
        
        
      </item>
      
      <item>
        <title>第2节：Go语言的前世今生</title>
        <link>https://2110833194.github.io/golang/article/goinitial/2/</link>
        <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
        
        <atom:modified>Sun, 13 Dec 2020 00:00:00 +0000</atom:modified>
        <guid>https://2110833194.github.io/golang/article/goinitial/2/</guid>
        <description>一、 为什么需要一个新的语言 最近十年来，C/C++在计算领域没有很好得到发展，并没有新的系统编程语言出现。对开发程度和系统效率在很多情况下不能</description>
        <content:encoded>&lt;h1 id=&#34;一-为什么需要一个新的语言&#34;&gt;一、 为什么需要一个新的语言&lt;/h1&gt;
&lt;p&gt;最近十年来，C/C++在计算领域没有很好得到发展，并没有新的系统编程语言出现。对开发程度和系统效率在很多情况下不能兼得。要么执行效率高，但低效的开发和编译，如C++；要么执行低效，但拥有有效的编译，如.NET、Java；所以需要一种拥有较高效的执行速度、编译速度和开发速度的编程语言，Go就横空出世了&lt;br /&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;传统的语言比如c++，大家花费太多时间来学习如何使用这门语言，而不是如何更好的表达写作者的思想，同时编译花费的时间实在太长，对于编写-编译-运行这个链条来说周期太长。动态语言如Python，由于没有强类型的约束，很多问题需要在运行时发现，这种低级错误更应该交给编译器来发现。&lt;/div&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人力成本越来越高&lt;/li&gt;
&lt;li&gt;机器越来越便宜&lt;/li&gt;
&lt;li&gt;机器的性能越来越厉害&lt;/li&gt;
&lt;li&gt;在开发效率和运行速度上达到平衡&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;go出现之前无论汇编语言还是动态脚本语言在执行效率和开发效率上都不能兼备&#34;&gt;go出现之前，无论汇编语言、还是动态脚本语言，在执行效率和开发效率上都不能兼备。&lt;/h6&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;&lt;ul&gt;
&lt;li&gt;执行效率 execution speed： C/C++ &amp;gt; Java &amp;gt; PHP&lt;/li&gt;
&lt;li&gt;开发效率 developing efficiency： PHP &amp;gt; Java &amp;gt; C/C++&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id=&#34;二-谷歌工程师的20时间&#34;&gt;二、 谷歌工程师的20%时间&lt;/h1&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;&lt;p&gt;谷歌的“20%时间”工作方式，允许工程师拿出20%的时间来研究自己喜欢的项目。语音服务Google Now、谷歌新闻Google News、谷歌地图Google Map上的交通信息等，全都是20%时间的产物。&lt;/p&gt;
&lt;p&gt;Go语言最开始也是20%时间的产物。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;三-创始人&#34;&gt;三、 创始人&lt;/h1&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;  &lt;p style=&#34;color:#00FFFF&#34;;&gt;Go的三个作者分别是： Rob Pike（罗伯.派克），Ken Thompson（肯.汤普森）和Robert Griesemer（罗伯特.格利茨默） 。&lt;/p&gt;
&lt;p&gt;Rob Pike：曾是贝尔实验室（Bell Labs）的Unix团队，和Plan 9操作系统计划的成员。他与Thompson共事多年，并共创出广泛使用的UTF-8 字元编码。&lt;br /&gt;
Ken Thompson：主要是B语言、C语言的作者、Unix之父。1983年图灵奖（Turing Award）和1998年美国国家技术奖（National Medal of Technology）得主。他与Dennis Ritchie是Unix的原创者。Thompson也发明了后来衍生出C语言的B程序语言。&lt;br /&gt;
Robert Griesemer：在开发Go之前是Google V8、Chubby和HotSpot JVM的主要贡献者。&lt;br /&gt;
此外还有Plan 9开发者Russ Cox、和曾改善目前广泛使用之开原码编译器GCC的Ian Taylor。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;四-go的缔造与发展&#34;&gt;四、 Go的缔造与发展&lt;/h1&gt;
&lt;h3 id=&#34;41-go的命名&#34;&gt;4.1 Go的命名&lt;/h3&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/mail1.jpg&#34;/&gt; 
&lt;/figure&gt;
&lt;p&gt;这是一封由 Rob Pike 在 2007 年 9 月 25 号，星期二，下午 3：12 回复给 Robert Griesemer、Ken Thompson 的有关编程语言讨论主题的邮件，邮件正文大意为：在开车回家的路上我得到了些灵感。1.给这门编程语言取名为“go”，它很简短，易书写。工具类可以命名为：goc、 gol、goa。交互式的调试工具也可以直接命名为“go”。语言文件后缀名为 .go 等等&lt;/p&gt;
&lt;p&gt;这就是 Go 语言名字的来源，自此之后 Robert、Rob 和 Ken 三个人开始在 Google 内部进行了研发，一直到了 2009 年，Go 正式开源了，Go 项目团队将 2009 年 11 月 10 日，即该语言正式对外开源的日字作为其官方生日。源代码最初托管在 &lt;a href=&#34;http://code.google.com&#34;&gt;http://code.google.com&lt;/a&gt; 上，之后几年才逐步的迁移到 GitHub 上。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;42-go的发展过程中的记事&#34;&gt;4.2 Go的发展过程中的记事&lt;/h3&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;  &lt;p style=&#34;color:#00FFFF&#34;;&gt;第一个事情是在开发设计 Go 语言过程中的第一个重大惊喜是收到了以下这封邮件：&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/mail2.jpg&#34;/&gt; 
&lt;/figure&gt;
&lt;p&gt;这是一封由 Ian Lance Taylor 在 2008 年 6月 7 日（星期六）的晚上 7：06 写给 Robert Griesemer、Rob Pike、 Ken Thompson 的关于 Go gcc 编译器前端的邮件。邮件正文大意如下：我的同事向我推荐了这个网站 http://…/go_lang.html 。这似乎是一门很有趣的编程语言。我为它写了一个 gcc 编译器前端。虽然这个工具仍缺少很多的功能，但它确实可以编译网站上展示的那个素数筛选程序了。&lt;/p&gt;
&lt;p&gt;Ian Lance Taylor 的加入以及第二个编译器 (gcc go) 的实现 在带来震惊的同时，也伴随着喜悦。这对 Go 项目来说不仅仅是鼓励，更是一种对可行性的证明。语言的第二次实现对制定语言规范和确定标准库的过程至关重要，同时也有助于保证其高可移植性，这也是 Go 语言承诺的一部分。自此之后 Ian Lance Taylor 成为了设计和实现 Go 语言及其工具的核心人物。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;  &lt;p style=&#34;color:#00FFFF&#34;;&gt;第二件事情是 Russ Cox 在2008年带着他的语言设计天赋和编程技巧加入了刚成立不久的 Go 团队。&lt;/p&gt;
&lt;p&gt;Russ 发现 Go 方法的通用性意味着函数也能拥有自己的方法，这直接促成了 http.HandlerFunc 的实现，这是一个让 Go 一下子变得无限可能的特性。Russ 还提出了更多的泛化性的想法，比如 io.Reader 和 io.Writer 接口，奠定了所有 I/O 库的整体结构。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;  &lt;p style=&#34;color:#00FFFF&#34;;&gt;第三件事情是聘请了安全专家 Adam Langley 帮助 Go 走向 Google 外面的世界。&lt;/p&gt;
&lt;p&gt;Adam 为 Go 团队做了许多不为外人知晓的工作，包括创建最初的 &lt;a href=&#34;http://golang.org&#34;&gt;http://golang.org&lt;/a&gt; 网站以及 build dashboard。不过他最大的贡献当属创建了 cryptographic 库。起先，在我们中的部分人看来，这个库无论在规模还是复杂度上都不成气候。但是就是这个库在后期成为了很多重要的网络和安全软件的基础，并且成为了 Go 语言开发历史的关键组成部分。许多网络基础设施公司，比如 Cloudflare，均重度依赖 Adam 在 Go 项目上的工作，互联网也因它变得更好。我记得当初 beego 设计的时候，session 模块设计的时候也得到了 Adam 的很多建议，因此，就 Go 而言，我们由衷地感谢 Adam。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;  &lt;p style=&#34;color:#00FFFF&#34;;&gt;第四个事情就是一家叫做 Docker 的公司。&lt;/p&gt;
&lt;p&gt;就是使用 Go 进行项目开发，并促进了计算机领域的容器行业，进而出现了像 Kubernetes 这样的项目。现在，我们完全可以说 Go 是容器语言，这是另一个完全出乎意料的结果。&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/init/1/1641730da1fe6861.jpg&#34;/&gt; 
&lt;/figure&gt;
&lt;p&gt;除了大名鼎鼎的Docker，完全用GO实现。业界最为火爆的容器编排管理系统kubernetes完全用GO实现。之后的Docker Swarm，完全用GO实现。除此之外，还有各种有名的项目，如etcd/consul/flannel，七牛云存储等等 均使用GO实现。有人说，GO语言之所以出名，是赶上了云时代。但为什么不能换种说法？也是GO语言促使了云的发展。&lt;/p&gt;
&lt;p&gt;除了云项目外，还有像今日头条、UBER这样的公司，他们也使用GO语言对自己的业务进行了彻底的重构。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;五最后&#34;&gt;五、最后&lt;/h1&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;Go语言是谷歌2009年发布的第二款开源编程语言（系统开发语言)，它是基于编译、垃圾收集和并发的编程语言。 Go语言专门针对多处理器系统应用程序的编程进行了优化，使用Go编译的程序可以媲美 C / C++代码的速度，而且更加安全、支持并行进程。作为出现在21世纪的语言，其近C的执行性能和近解析型语言的开发效率，以及近乎于完美的编译速度，已经风靡全球。特别是在云项目中，大部分都使用了Golang来开发。不得不说，Golang早已深入人心。而对于一个没有历史负担的新项目，Golang或许就是个不二的选择。 很多人将Go语言称为21世纪的C语言，因为Go不仅拥有C的简洁和性能。而且还很好的提供了21世纪互联网环境下服务端开发的各种实用特性。被称为Go语言之父的罗勃·派克(Rob Pike)就曾说过，你是否同意Go语言，取决于你是认可少就是多，还是少就是少(Less is more or less is less)。Go语言的整个设计哲学就是：将简单、实用体现得淋漓尽致。 如今 Go 已经是云计算编程语言，GO语言背靠Google这棵大树，又不乏牛人坐镇，是名副其实的“牛二代”。想象一下：一个只有十几年发展经历的编程语言，已经成为了如此巨大而且正在不断发展的行业的主导者，这种成功是每个人都无法想象的。&lt;/div&gt;
</content:encoded>
        <dc:creator>诸葛青的编程之旅</dc:creator>
        <media:content url="https://2110833194.github.ioimages/recommend_site/xingyouji.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
        
        
      </item>
      
      <item>
        <title>第3节：Go语言logo和版本</title>
        <link>https://2110833194.github.io/golang/article/goinitial/3/</link>
        <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
        
        <atom:modified>Sun, 13 Dec 2020 00:00:00 +0000</atom:modified>
        <guid>https://2110833194.github.io/golang/article/goinitial/3/</guid>
        <description>一、 Go的logo 1.1 Go语言的logo Go语言的logo就是很简洁的GO两个字母。 1.2 Go的吉祥物 Go之所以叫Go，是想表达这门语言的运行速度</description>
        <content:encoded>&lt;h1 id=&#34;一-go的logo&#34;&gt;一、 Go的logo&lt;/h1&gt;
&lt;h3 id=&#34;11-go语言的logo&#34;&gt;1.1 Go语言的logo&lt;/h3&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/go.jfif&#34;/&gt; 
&lt;/figure&gt;
&lt;p&gt;Go语言的logo就是很简洁的GO两个字母。&lt;/div&gt;
&lt;h3 id=&#34;12-go的吉祥物&#34;&gt;1.2 Go的吉祥物&lt;/h3&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/gopher.jfif&#34;/&gt; 
&lt;/figure&gt;
&lt;p&gt;Go之所以叫Go，是想表达这门语言的运行速度、开发速度、学习速度（develop）都像gopher一样快。&lt;/p&gt;
&lt;p&gt;gopher是一种生活在加拿大的小动物，go的吉祥物就是这个小动物， 它的中文名叫做囊地鼠，他们最大的特点就是挖洞速度特别快，当然可能不止是挖洞啦。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;二go的官网&#34;&gt;二、Go的官网&lt;/h1&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;&lt;figure&gt;
    &lt;img src=&#34;https://2110833194.github.io/images/golang/golangsite.jpg&#34;/&gt; 
&lt;/figure&gt;
&lt;/div&gt;
&lt;h1 id=&#34;三-go语言主要发展过程&#34;&gt;三、 Go语言主要发展过程&lt;/h1&gt;
&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34; data-dir=&#34;ltr&#34;&gt;&lt;ul&gt;
&lt;li&gt;2007年9月，雏形设计 ，Rob Pike（罗伯.派克） 正式命名为Go；&lt;/li&gt;
&lt;li&gt;2008年5月，Google全力支持该项目；&lt;/li&gt;
&lt;li&gt;2009年11月10日，首次公开发布，Go将代码全部开源，它获得了当年的年度语言；&lt;/li&gt;
&lt;li&gt;2011年3月16日，Go语言的第一个稳定(stable)版本r56发布。&lt;/li&gt;
&lt;li&gt;2012年3月28日，Go语言的第一个正式版本Go1发布。&lt;/li&gt;
&lt;li&gt;2013年4月04日，Go语言的第一个Go 1.1beta1测试版发布。&lt;/li&gt;
&lt;li&gt;2013年4月08日，Go语言的第二个Go 1.1beta2测试版发布。&lt;/li&gt;
&lt;li&gt;2013年5月02日，Go语言Go 1.1RC1版发布。&lt;/li&gt;
&lt;li&gt;2013年5月07日，Go语言Go 1.1RC2版发布。&lt;/li&gt;
&lt;li&gt;2013年5月09日，Go语言Go 1.1RC3版发布。&lt;/li&gt;
&lt;li&gt;2013年5月13日，Go语言Go 1.1正式版发布。&lt;/li&gt;
&lt;li&gt;2013年9月20日，Go语言Go 1.2RC1版发布。&lt;/li&gt;
&lt;li&gt;2013年12月1日，Go语言Go 1.2正式版发布。&lt;/li&gt;
&lt;li&gt;2014年6月18日，Go语言Go 1.3版发布。&lt;/li&gt;
&lt;li&gt;2014年12月10日，Go语言Go 1.4版发布。&lt;/li&gt;
&lt;li&gt;2015年8月19日，Go语言Go 1.5版发布，本次更新中移除了”最后残余的C代码”。&lt;/li&gt;
&lt;li&gt;2016年2月17日，Go语言Go 1.6版发布。&lt;/li&gt;
&lt;li&gt;2016年8月15日，Go语言Go 1.7版发布。&lt;/li&gt;
&lt;li&gt;2017年2月17日，Go语言Go 1.8版发布。&lt;/li&gt;
&lt;li&gt;2017年8月24日，Go语言Go 1.9版发布。&lt;/li&gt;
&lt;li&gt;2018年2月16日，Go语言Go 1.10版发布。&lt;/li&gt;
&lt;li&gt;2018年8月24日，Go语言Go 1.11版发布。&lt;/li&gt;
&lt;li&gt;2019年2月25日，GO语言Go1.12版发布。&lt;/li&gt;
&lt;li&gt;2019 年 9 月,GO语言Go1.13版发布。&lt;/li&gt;
&lt;li&gt;2020 年 2 月,GO语言Go1.14版发布。&lt;br /&gt;
Go 语言起源 2007 年，并于 2009 年正式对外发布。它从 2009 年 9 月 21 日开始作为谷歌公司 20% 兼职项目，即相关员工利用 20% 的空余时间来参与 Go 语言的研发工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实可以看到，Go语言的历史不算很短。&lt;/p&gt;
&lt;p&gt;2009年11月 GO语言第一个版本发布。2012年3月 第一个正式版本Go1.0发布。&lt;/p&gt;
&lt;p&gt;2015年8月 go1.5发布，这个版本被认为是历史性的。完全移除C语言部分，使用GO编译GO，少量代码使用汇编实现。另外，他们请来了内存管理方面的权威专家Rick Hudson，对GC进行了重新设计，支持并发GC，解决了一直以来广为诟病的GC时延（STW）问题。并且在此后的版本中，又对GC做了更进一步的优化。到go1.8时，相同业务场景下的GC时延已经可以从go1.1的数秒，控制在1ms以内。GC问题的解决，可以说GO语言在服务端开发方面，几乎抹平了所有的弱点。&lt;/p&gt;
&lt;p&gt;直到2020的2月，Go语言发布最新的版本是Go 1.14。&lt;/p&gt;
&lt;p&gt;在GO语言的版本迭代过程中，语言特性基本上没有太大的变化，基本上维持在GO1.1的基准上，并且官方承诺，新版本对老版本下开发的代码完全兼容。事实上，GO开发团队在新增语言特性上显得非常谨慎，而在稳定性、编译速度、执行效率以及GC性能等方面进行了持续不断的优化。&lt;/p&gt;
&lt;p&gt;Go稳定版发布时，Go Team承诺后续的版本都会兼容之前的版本。这对于开发者来说非常重要，Go后续的版本也一直在提升内功，从而可以让用户无缝的升级Go版本。&lt;/p&gt;
&lt;/div&gt;
</content:encoded>
        <dc:creator>诸葛青的编程之旅</dc:creator>
        <media:content url="https://2110833194.github.ioimages/recommend_site/xingyouji.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
        
        
      </item>
      

    
  </channel>
</rss>