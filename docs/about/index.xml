<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>笔记——心得 on 诸葛青的编程之旅</title>
    <link>https://www.zhugeqing.top/about/</link>
    <description>Recent content in 笔记——心得 on 诸葛青的编程之旅</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>[备案号：湘ICP备2021009076号](https://beian.miit.gov.cn/)  ![](beian.png)[湘公网安备 43132202001066号](http://www.beian.gov.cn/)</copyright>
    <lastBuildDate>Thu, 14 Oct 2021 00:00:00 +0000</lastBuildDate>
    <sy:updatePeriod>weekly&#39;</sy:updatePeriod>
    
        <atom:link href="https://www.zhugeqing.top/about/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>faster学习法（快速学习法）</title>
        <link>https://www.zhugeqing.top/about/faster/</link>
        <pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate>
        
        <atom:modified>Fri, 15 Oct 2021 00:00:00 +0000</atom:modified>
        <guid>https://www.zhugeqing.top/about/faster/</guid>
        <description>1. forget(忘记) 忘记以前所掌握的东西 ，让大脑像一个空荡荡的容器，像一个小孩子一样可以快速学习，用一种“初学者心态”来读一本书，或者是学习其他知识，当觉得自己对即将要学习的知识有所了解时，会妨碍我们吸收新的信息 忘记不紧张或者不重要的事情，学习的过程中必须专注，才能全身心地投入，高效地进行学习。如果在学习中，思想已经飘到了其他事情上，这件事情可能比较重要，但是并不紧急，这种情况不可避免，不要挣扎</description>
        <content:encoded>&lt;h2 id=&#34;1-forget忘记&#34;&gt;1. forget(忘记)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt; 忘记以前所掌握的东西&lt;/code&gt; ，&lt;font color=SkyBlue&gt;让大脑像一个空荡荡的容器，像一个小孩子一样可以快速学习，用一种“初学者心态”来读一本书，或者是学习其他知识，当觉得自己对即将要学习的知识有所了解时，会妨碍我们吸收新的信息&lt;br /&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;忘记不紧张或者不重要的事情&lt;/code&gt;，&lt;font color=SkyBlue&gt;学习的过程中必须专注，才能全身心地投入，高效地进行学习。如果在学习中，思想已经飘到了其他事情上，这件事情可能比较重要，但是并不紧急，这种情况不可避免，不要挣扎不去想这件事情，越是克制，越是难以抵抗。相反，可以打开备忘录，或者打开一个笔记本，写下这些事情，等学习完成之后再做处理&lt;br /&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;忘掉自己的极限&lt;/code&gt;，&lt;font color=SkyBlue&gt;生命没有极限，除非你自己设置，如果你不敢挑战极限，就永远无法突破自我。你的能力绝不是一个定值，在学习的世界里，一切皆有可能&lt;br /&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-act行动&#34;&gt;2. act(行动)&lt;/h2&gt;
&lt;p&gt;&lt;font color=SkyBlue&gt;抛弃被动式学习，学习态度越是积极主动，学习速度就越快，学到的知识的质量就越高，学到的内容就越多。&lt;br /&gt;
&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-statue状态&#34;&gt;3. statue(状态)&lt;/h2&gt;
&lt;font color=SkyBlue&gt;
所有学习过程都依赖于个人的状态。当你把情感与信息结合在一起时，你对这个信息的印象会更深刻，改变你学习时的姿势或者呼吸方式。想象你精力充沛，对于即将开始的学习感到兴奋，按照这个情绪选择你的坐姿或站姿。在即将开始的学习中，你会有所收获，而且会应用新知识，你一定会对此感到兴奋。切记，所有学习过程都依赖于你的状态。请主动选择快乐、入迷和好奇的学习状态吧！
&lt;/font&gt;
&lt;h2 id=&#34;4-teach教授&#34;&gt;4. teach(教授)&lt;/h2&gt;
&lt;font color=SkyBlue&gt;
如果你想大幅缩短学习曲线，就把你的学习目标定位为学习之后能把学习内容教授给别人。思考一下：如果知道你需要就学习内容做一场演讲，那么你学习的目标肯定是充分掌握所学内容，这样才能更好地向其他人解释。你的注意力会更加集中，你的笔记会更加详细，你甚至还会提出更好的问题。当你授课的时候，实际上你经历了两次学习，第一次是你自己学习，第二次是通过给别人讲课学习。
&lt;/font&gt;
&lt;h2 id=&#34;5-enter输入&#34;&gt;5. enter(输入)&lt;/h2&gt;
&lt;font color=SkyBlue&gt;
改善个人表现最简单、最强大的方法是什么？答案是善用你的日程表。我们会在日程表上写下或者输入重要的事情：参加工作会议、出席家长会、牙医就诊时间、带宠物去看兽医等。大家的日程表上到底缺了什么？答案是缺少给自己的成长和发展安排时间。如果你的日程表上没有这样的安排，那么你很难实现个人的成长和发展。如果你“忘记”锻炼身体和大脑，一天的时间转瞬就会溜走。
&lt;/font&gt;
&lt;h2 id=&#34;6-review复习&#34;&gt;6. Review（复习）&lt;/h2&gt;
&lt;p&gt;&lt;font color=SkyBlue&gt;要想减少遗忘曲线对你的影响，最好的方法之一就是每隔一段时间积极地回忆此前学过的内容。在多个分散的时段进行复习，你可以让信息更好地留存在大脑之中。每隔一段时间就复习一下学过的内容可以强化大脑对它的记忆。&lt;br /&gt;
&lt;/font&gt;&lt;/p&gt;
</content:encoded>
        <dc:creator>诸葛青</dc:creator>
        <media:content url="https://www.zhugeqing.topimages/recommend_site/xingyouji.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
        
          
            
          
        
      </item>
      
      <item>
        <title>git笔记</title>
        <link>https://www.zhugeqing.top/about/git/</link>
        <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
        
        <atom:modified>Sun, 13 Dec 2020 00:00:00 +0000</atom:modified>
        <guid>https://www.zhugeqing.top/about/git/</guid>
        <description>git 配置 git config --global user.name &amp;quot;xing-you-ji&amp;quot; git config --global user.email &amp;quot;2110833194@qq.com&amp;quot; 配置用户名和邮箱，不加&amp;ndash;global参数就相当于只对当前目录仓库有效 &amp;ndash;system表示对系统登录的所有用户有效 git config --global --list 查看git当前用户仓库配置，不加&amp;ndash;global参数就相当于显示当前目录仓库 同样还可以用&amp;ndash;system git 仓库初始化 已经有项目代码，在项目目录执行git init 还未开始创建仓库，执行git init project_name git config --global user.name &amp;quot;xing-you-ji&amp;quot; git config --global user.email &amp;quot;2110833194@qq.com&amp;quot; 新加入</description>
        <content:encoded>&lt;h2 id=&#34;git-配置&#34;&gt;git 配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git config --global user.name &amp;quot;xing-you-ji&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global user.email &amp;quot;2110833194@qq.com&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;配置用户名和邮箱，不加&amp;ndash;global参数就相当于只对当前目录仓库有效&lt;br /&gt;
&amp;ndash;system表示对系统登录的所有用户有效&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git config --global --list &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;查看git当前用户仓库配置，不加&amp;ndash;global参数就相当于显示当前目录仓库&lt;br /&gt;
同样还可以用&amp;ndash;system&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;git-仓库初始化&#34;&gt;git 仓库初始化&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;已经有项目代码，在项目目录执行&lt;code&gt;git init&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;还未开始创建仓库，执行&lt;code&gt;git init project_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global user.name &amp;quot;xing-you-ji&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global user.email &amp;quot;2110833194@qq.com&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;新加入文件，使用&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;将最新修改从工作区加入暂存区&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;init&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;将暂存区的内容加入版本历史中（&lt;code&gt;git commit -am &amp;quot;init&amp;quot;&lt;/code&gt; 可以将已经进行过&lt;code&gt;追踪（track）&lt;/code&gt;的文件直接提交到版本历史）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git status&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;查看&lt;code&gt;工作区&lt;/code&gt;与&lt;code&gt;暂存区&lt;/code&gt;状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;将当前目录及子孙目录里的变动都加到暂存区&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add -A&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;将当前仓库所有变动加入暂存区&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git mv a.txt b.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;将仓库的a.txt文件修改成b.txt（并将修改加入暂存区）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git rm a.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;将仓库的a.txt文件进行删除（并将修改加入暂存区）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git log&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;查看版本提交历史&lt;br /&gt;
&lt;code&gt;git log master&lt;/code&gt; 查看指定分支提交历史&lt;br /&gt;
参数&lt;code&gt;--oneline&lt;/code&gt;简洁地查看提交历史&lt;br /&gt;
参数&lt;code&gt;--all&lt;/code&gt;查看所有分支的提交历史&lt;br /&gt;
参数&lt;code&gt;--graph&lt;/code&gt;带图形的查看&lt;br /&gt;
参数&lt;code&gt;-n2&lt;/code&gt;查看最近2次提交历史（数字可修改）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;查看分支 &lt;br /&gt;
&lt;code&gt;git branch a&lt;/code&gt; 从当前commit创建一个名叫&lt;code&gt;a&lt;/code&gt;的分支&lt;br /&gt;
&lt;code&gt;git branch -d a&lt;/code&gt; 删除分支a&lt;br /&gt;
&lt;code&gt;git branch -v&lt;/code&gt; 查看分支以及对应的commit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git checkout&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;切换分支&lt;br /&gt;
&lt;code&gt;git checkout master&lt;/code&gt; 切换到&lt;code&gt;master&lt;/code&gt;分支&lt;br /&gt;
&lt;code&gt;git checkout -b a&lt;/code&gt; 创建分支a并切换到分支a&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git commit --amend&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;修改最新一次commit 的message（编辑文件类似vim）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git rebase -i 83b81348aa04&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;83b81348aa04为想要修改commit message的上一个分支&lt;br /&gt;
修改文件的&lt;code&gt;pick&lt;/code&gt;为&lt;code&gt;r&lt;/code&gt;，保存退出，再进行修改message，保存退出&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git reset HEAD&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;从当前提交回退版本&lt;br /&gt;
git reset HEAD^1；1代表上一次，2表示上上次，以此类推（&lt;code&gt;win的cmd可能需要给&lt;/code&gt;HEAD^1&lt;code&gt;加双引号&lt;/code&gt;）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git cherry-pick 83b81348aa04&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;将提交83b81348aa04应用到当前提交&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git rebase master dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;将dev分支合并到maser分支之后，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git merge dev&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;将dev分支和当前分支的提交合并成一个&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gitk&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;图形化界面工具（查看有中文乱码，需在gitconfig中加入）&lt;br /&gt;
&lt;div class=&#34;box&#34;&gt;[gui]&lt;br /&gt;
encoding = utf-8&lt;/div&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;git-探秘&#34;&gt;git 探秘&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.git&lt;/code&gt;文件夹用于帮助&lt;code&gt;git&lt;/code&gt;工具来管理仓库，进入&lt;code&gt;.git/objects&lt;/code&gt;可以查看对应的&lt;code&gt;git类型&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git分为commit, tree, blob三种类型&lt;/code&gt;，每一个&lt;code&gt;commit&lt;/code&gt;对应一个或者多个&lt;code&gt;tree&lt;/code&gt;，一个tree可以对应其他&lt;code&gt;tree（可以看作是文件夹）&lt;/code&gt;和&lt;code&gt;blob（相当于是一个文件）&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.git/config&lt;/code&gt;文件可以用于配置当前仓库的信息，比如远程仓库，user，email&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.git/logs&lt;/code&gt;下可以查看各分支commit的哈希值，&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.git/HEAD&lt;/code&gt;记录当前指向的分支&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;git-特殊知识&#34;&gt;git 特殊知识&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;如果使用&lt;code&gt;git checkout&lt;/code&gt; 切换到某一个commit上而不生成分支，这种&lt;code&gt;分离HEAD指针&lt;/code&gt;的情况，如果只会再切换到其他分支上，那么将可能丢失在这个commit上后产生的修改（&lt;code&gt;需要自行记住提交的hash值，再切换回来&lt;/code&gt;），（&lt;code&gt;HEAD要尽量与分支绑定在一起进行操作&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;git cat-file -t&lt;/code&gt;可以查看&lt;code&gt;git 产生的hash值的类型&lt;/code&gt;，使用&lt;code&gt;git cat-file -p&lt;/code&gt;可以查看&lt;code&gt;类型具体的内容&lt;/code&gt;，&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
        <dc:creator>诸葛青的编程之旅</dc:creator>
        <media:content url="https://www.zhugeqing.topimages/recommend_site/xingyouji.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
        
        
      </item>
      

    
  </channel>
</rss>